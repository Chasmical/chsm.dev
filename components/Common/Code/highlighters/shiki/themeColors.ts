import type { ClassShorthand } from "./theme";

export interface ShikiTokenColor {
  scope: string | string[];
  settings: {
    fontStyle?: string;
    foreground?: ClassShorthand | `#${string}`;
  };
}

// The `slack-dark` theme, but with classes

export const shikiTokenColors: ShikiTokenColor[] = [
  { scope: ["meta.embedded", "source.groovy.embedded"], settings: { foreground: "#d4d4d4" } },
  { scope: "emphasis", settings: { fontStyle: "italic" } },
  { scope: "strong", settings: { fontStyle: "bold" } },
  { scope: "header", settings: { foreground: "#000080" } },
  { scope: "comment", settings: { foreground: "comment" } },
  { scope: "constant.language", settings: { foreground: "keyword" } },
  { scope: "constant.numeric", settings: { foreground: "number" } },
  { scope: "constant.regexp", settings: { foreground: "#646695" } },
  { scope: "entity.name.tag", settings: { foreground: "entityTag" } },
  { scope: "entity.name.tag.css", settings: { foreground: "#d7ba7d" } },
  { scope: "entity.other.attribute-name", settings: { foreground: "identifier" } },
  {
    scope: [
      "entity.other.attribute-name.class.css",
      "entity.other.attribute-name.class.mixin.css",
      "entity.other.attribute-name.id.css",
      "entity.other.attribute-name.parent-selector.css",
      "entity.other.attribute-name.pseudo-class.css",
      "entity.other.attribute-name.pseudo-element.css",
      "source.css.less entity.other.attribute-name.id",
      "entity.other.attribute-name.attribute.scss",
      "entity.other.attribute-name.scss",
    ],
    settings: { foreground: "#d7ba7d" },
  },
  { scope: "invalid", settings: { foreground: "#f44747" } },
  { scope: "markup.underline", settings: { fontStyle: "underline" } },
  { scope: "markup.bold", settings: { foreground: "markupBold" } },
  { scope: "markup.heading", settings: { foreground: "markupHeading" } },
  { scope: "markup.italic", settings: { fontStyle: "italic" } },
  { scope: "markup.quote", settings: { foreground: "markupQuote" } },
  { scope: "markup.inserted", settings: { foreground: "#b5cea8" } },
  { scope: "markup.deleted", settings: { foreground: "#ce9178" } },
  { scope: "markup.changed", settings: { foreground: "#569cd6" } },
  { scope: "markup.code", settings: { foreground: "identifier" } },
  { scope: "markup.code.other", settings: { foreground: "string" } },
  { scope: "punctuation.definition.quote.begin.markdown", settings: { foreground: "#6a9955" } },
  { scope: "punctuation.definition.list.begin.markdown", settings: { foreground: "#6796e6" } },
  { scope: "markup.inline.raw", settings: { foreground: "#ce9178" } },
  { scope: "punctuation.definition.tag", settings: { foreground: "punctuationTag" } },
  { scope: "meta.preprocessor", settings: { foreground: "keyword" } },
  { scope: "meta.preprocessor.string", settings: { foreground: "string" } },
  { scope: "meta.preprocessor.numeric", settings: { foreground: "number" } },
  { scope: "meta.structure.dictionary.key.python", settings: { foreground: "#9cdcfe" } },
  { scope: "meta.diff.header", settings: { foreground: "#569cd6" } },
  { scope: "storage", settings: { foreground: "keyword" } },
  { scope: "storage.type", settings: { foreground: "keyword" } },
  { scope: "storage.modifier", settings: { foreground: "keyword" } },
  { scope: "string", settings: { foreground: "string" } },
  { scope: "string.tag", settings: { foreground: "string" } },
  { scope: "string.value", settings: { foreground: "string" } },
  { scope: "string.regexp", settings: { foreground: "regexp" } },
  {
    scope: [
      "punctuation.definition.template-expression.begin",
      "punctuation.definition.template-expression.end",
      "punctuation.section.embedded",
    ],
    settings: { foreground: "keyword" },
  },
  {
    scope: [
      "punctuation.terminator.statement",
      "punctuation.definition.block",
      "punctuation.definition.parameters",
      "punctuation.definition.typeparameters",
      "punctuation.definition.binding-pattern",
      "punctuation.definition.section",
      "punctuation.definition.dictionary",
      "punctuation.definition.array",
      "punctuation.separator",
      "punctuation.accessor",
      "punctuation.curlybrace",
      "meta.brace.round",
      "meta.brace.square",
    ],
    settings: { foreground: "punctuation" },
  },
  { scope: "meta.template.expression", settings: { foreground: "#d4d4d4" } },
  {
    scope: ["meta.jsx.children", "meta.paragraph"],
    settings: { foreground: "plainText" },
  },
  {
    scope: [
      "support.type.vendored.property-name",
      "support.type.property-name",
      "variable.css",
      "variable.scss",
      "variable.other.less",
      "source.coffee.embedded",
    ],
    settings: { foreground: "#9cdcfe" },
  },
  { scope: "keyword", settings: { foreground: "keyword" } },
  { scope: "keyword.control", settings: { foreground: "keyword" } },
  { scope: "keyword.operator", settings: { foreground: "operator" } },
  {
    scope: [
      "keyword.operator.new",
      "keyword.operator.expression",
      "keyword.operator.cast",
      "keyword.operator.sizeof",
      "keyword.operator.instanceof",
      "keyword.operator.logical.python",
    ],
    settings: { foreground: "keyword" },
  },
  { scope: "keyword.other.unit", settings: { foreground: "#b5cea8" } },
  {
    scope: ["punctuation.section.embedded.begin.php", "punctuation.section.embedded.end.php"],
    settings: { foreground: "#569cd6" },
  },
  { scope: "support.function.git-rebase", settings: { foreground: "#9cdcfe" } },
  { scope: "constant.sha.git-rebase", settings: { foreground: "#b5cea8" } },
  {
    scope: ["storage.modifier.import.java", "variable.language.wildcard.java", "storage.modifier.package.java"],
    settings: { foreground: "#d4d4d4" },
  },
  { scope: "variable.language", settings: { foreground: "#569cd6" } },
  {
    scope: ["entity.name.function", "support.function", "support.constant.handlebars"],
    settings: { foreground: "entityFunction" },
  },
  {
    scope: [
      "meta.return-type",
      "support.class",
      "support.type",
      "entity.name.type",
      "entity.name.class",
      "storage.type.numeric.go",
      "storage.type.byte.go",
      "storage.type.boolean.go",
      "storage.type.string.go",
      "storage.type.uintptr.go",
      "storage.type.error.go",
      "storage.type.rune.go",
      "storage.type.cs",
      "storage.type.generic.cs",
      "storage.type.modifier.cs",
      "storage.type.variable.cs",
      "storage.type.annotation.java",
      "storage.type.generic.java",
      "storage.type.java",
      "storage.type.object.array.java",
      "storage.type.primitive.array.java",
      "storage.type.primitive.java",
      "storage.type.token.java",
      "storage.type.groovy",
      "storage.type.annotation.groovy",
      "storage.type.parameters.groovy",
      "storage.type.generic.groovy",
      "storage.type.object.array.groovy",
      "storage.type.primitive.array.groovy",
      "storage.type.primitive.groovy",
    ],
    settings: { foreground: "entityClass" },
  },
  {
    scope: [
      "meta.type.cast.expr",
      "meta.type.new.expr",
      "support.constant.math",
      "support.constant.dom",
      "support.constant.json",
      "entity.other.inherited-class",
    ],
    settings: { foreground: "entityClass" },
  },
  { scope: "keyword.control", settings: { foreground: "keywordControl" } },
  {
    scope: [
      "variable",
      "meta.definition.variable.name",
      "support.variable",
      "entity.name.variable",
      "entity.name.label",
      "meta.object-literal.key",
      "support.type.property-name",
    ],
    settings: { foreground: "identifier" },
  },
  {
    scope: [
      "support.constant.property-value",
      "support.constant.font-name",
      "support.constant.media-type",
      "support.constant.media",
      "constant.other.color.rgb-value",
      "constant.other.rgb-value",
      "support.constant.color",
    ],
    settings: { foreground: "#ce9178" },
  },
  {
    scope: [
      "punctuation.definition.group.regexp",
      "punctuation.definition.group.assertion.regexp",
      "punctuation.definition.character-class.regexp",
      "punctuation.character.set.begin.regexp",
      "punctuation.character.set.end.regexp",
      "keyword.operator.negation.regexp",
      "support.other.parenthesis.regexp",
    ],
    settings: { foreground: "regexp2" },
  },
  {
    scope: [
      "constant.character.character-class.regexp",
      "constant.other.character-class.set.regexp",
      "constant.other.character-class.regexp",
      "constant.character.set.regexp",
    ],
    settings: { foreground: "regexp" },
  },
  { scope: ["keyword.operator.or.regexp", "keyword.control.anchor.regexp"], settings: { foreground: "regexp4" } },
  { scope: "keyword.operator.quantifier.regexp", settings: { foreground: "regexp3" } },
  { scope: "constant.character", settings: { foreground: "#569cd6" } },
  { scope: "constant.character.escape", settings: { foreground: "#d7ba7d" } },
  { scope: "token.info-token", settings: { foreground: "#6796e6" } },
  { scope: "token.warn-token", settings: { foreground: "#cd9731" } },
  { scope: "token.error-token", settings: { foreground: "#f44747" } },
  { scope: "token.debug-token", settings: { foreground: "#b267e6" } },
];
